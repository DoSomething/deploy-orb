version: 2.1

description: |
  Shared deployment steps for DoSomething.org apps.

jobs:
  deploy:
    parameters:
      app:
        description: "The application name, used to resolve S3 bucket & Lambda function."
        type: string
      working_directory:
        description: "The working directory, used to persist assets between jobs."
        type: string
        default: ~/project
    docker:
      - image: circleci/python:3.6
    working_directory: "<<parameters.working_directory>>"
    environment:
      APP_NAME: "<<parameters.app>>"
    steps:
      - attach_workspace:
          at: "<<parameters.working_directory>>"
      - setup
      - lambda

commands:
  store:
    parameters:
      working_directory:
        description: "The working directory, used to persist assets between jobs."
        type: string
        default: ~/project
    steps:
      - run:
          name: Compress source
          command: cd <<parameters.working_directory>> && zip -r release.zip .
      - persist_to_workspace:
          root: .
          paths:
            - release.zip

  setup:
    steps:
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
  lambda:
    steps:
      - run:
          name: Load deploy credentials
          command: |
            export LAMBDA_KEY=$(aws ssm get-parameter --name /circleci/$APP_NAME/AWS_ACCESS_KEY_ID --with-decryption --output text --query Parameter.Value)
            export LAMBDA_SECRET=$(aws ssm get-parameter --name /circleci/$APP_NAME/AWS_SECRET_ACCESS_KEY --with-decryption --output text --query Parameter.Value)
            echo "export AWS_ACCESS_KEY_ID=$LAMBDA_KEY" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$LAMBDA_SECRET" >> $BASH_ENV
      - run:
          name: Prepare deployment targets
          command: |
            echo "export FUNCTION_NAME=$APP_NAME" >> $BASH_ENV
            echo "export DEPLOY_BUCKET=$APP_NAME-deploy" >> $BASH_ENV
      - run:
          name: Upload build to S3 bucket
          command: |
            aws s3 cp release.zip s3://$DEPLOY_BUCKET --region us-east-1
      - run:
          name: Publish new function version
          command: |
            aws lambda update-function-code --region us-east-1 --function-name $FUNCTION_NAME \
              --s3-bucket $DEPLOY_BUCKET --s3-key release.zip --publish \
              --query '{Name:FunctionName,Version:Version}' --output table

